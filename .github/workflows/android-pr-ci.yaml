name: Android PR CI [ an/develop ]

on:
  pull_request:
    branches: ["an/develop"]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  verify:
    runs-on: ubuntu-latest

    env:
      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      LOCAL_PROPERTIES_CONTENTS: ${{ secrets.LOCAL_PROPERTIES_CONTENTS }}

    defaults:
      run:
        shell: bash
        working-directory: ./android/Bottari

    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: gradle

      - name: Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: > 
            ${{ runner.os }}-gradle-${{ hashFiles(
              'android/Bottari/build.gradle.kts',
              'android/Bottari/gradle/libs.versions.toml',
              'android/Bottari/gradle-wrapper.properties'
            ) }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Create google-services.json
        run: echo "$GOOGLE_SERVICES_JSON" > ./app/google-services.json

      - name: Create local.properties
        run: echo "$LOCAL_PROPERTIES_CONTENTS" > ./local.properties

      - name: Run Ktlint Check
        id: ktlint
        run: ./gradlew ktlintCheck

      - name: Run Unit Tests
        id: test
        run: ./gradlew testDebugUnitTest --build-cache --parallel

      - name: Assemble Debug APK
        id: assemble
        run: ./gradlew assembleDebug --build-cache --parallel

      - name: Post CI summary as PR comment
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const results = {
              ktlint: '${{ steps.ktlint.outcome }}'
              test: '${{ steps.test.outcome }}',
              assemble: '${{ steps.assemble.outcome }}',
            };

            const emoji = {
              success: '✅',
              failure: '❌',
              cancelled: '⚠️',
              skipped: '⏭️'
            };

            let body = `## Android CI Results\n\n`;
            body += `- **Ktlint Check**: ${emoji[results.ktlint] || results.ktlint}\n`;
            body += `- **Unit Tests**: ${emoji[results.test] || results.test}\n`;
            body += `- **Assemble Debug APK**: ${emoji[results.assemble] || results.assemble}\n`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
