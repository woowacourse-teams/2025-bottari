name: Android Develop CD [ an/develop ]

on:
  push:
    branches:
      - an/develop
  pull_request:
    branches:
      - an/develop 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      LOCAL_PROPERTIES_CONTENTS: ${{ secrets.LOCAL_PROPERTIES_CONTENTS }}
    
    defaults:
      run:
        working-directory: ./android/Bottari
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Grant execute permission
        run: chmod +x gradlew

      - name: Calculate versionCode
        run: |
          BUILD_NUMBER=$(printf "%02d" $GITHUB_RUN_NUMBER)
          DATE_CODE=$(date +%y%m%d)
          echo "VERSION_CODE=1${DATE_CODE}${BUILD_NUMBER}" >> $GITHUB_ENV

      - name: Get versionName from Gradle
        run: |
          VERSION_NAME=$(./gradlew -q printVersionName)
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV

      - name: Create google-services.json
        run: echo "$GOOGLE_SERVICES_JSON" > ./app/google-services.json

      - name: Create local.properties
        run: echo "$LOCAL_PROPERTIES_CONTENTS" > ./local.properties

      - name: Assemble Debug APK
        run: ./gradlew assembleDebug
        env:
          VERSION_CODE: ${{ env.VERSION_CODE }}
          VERSION_NAME: ${{ env.VERSION_NAME }}

      - name: Check app directory
        run: ls -al ./app

      - name: Check build directory
        run: ls -al ./app/build

      - name: Check outputs directory
        run: ls -al ./app/build/outputs

      - name: Check apk directory
        run: ls -al ./app/build/outputs/apk

      - name: Check debug apk directory
        run: ls -al ./app/build/outputs/apk/debug

      - name: Deploy to Firebase
        id: firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.ANDROID_FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.ANDROID_CREDENTIAL_FILE_CONTENT }}
          groups: BOTTARI_TEST_GROUP
          file: ./app/build/outputs/apk/debug/app-debug.apk

      - name: Send Discord Notification
        if: always()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.ANDROID_DEVELOP_APP_DEPLOY_HOOK_URL }}
        with:
          args: |
            ${{ github.job }} **Firebase Debug 배포**
            - 브랜치: `an/develop`
            - versionCode: `${{ env.VERSION_CODE }}`
            - versionName: `${{ env.VERSION_NAME }}`
            - 빌드 번호: `${{ github.run_number }}`
            - 상태: ${{ job.status }}
            - 빌드 URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
